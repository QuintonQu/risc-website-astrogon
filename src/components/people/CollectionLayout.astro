---
import type { PeopleEntry } from "@/types";
import BaseLayout from "@components/base/BaseLayout.astro";
import StudentCard from "@components/people/Card.astro";
import ProfessorCard from "@components/people/ProfessorCard.astro";

interface Props {
  peopleIndex: PeopleEntry;
  entries: PeopleEntry[];
}

const { peopleIndex, entries } = Astro.props;

const groupAndSortByStartYear = (folderName: string, isAlumni: boolean) => {
  return entries
    .filter((entry) => {
      // Must be in the specified folder
      if (!entry.id.startsWith(`${folderName}/`)) return false;

      // Determine if this is considered alumni or not
      const isEntryAlumni = entry.data.endYear !== "present";

      return isAlumni ? isEntryAlumni : !isEntryAlumni;
    })
    .sort((a, b) => {
      const aYear = parseInt(a.data.startYear) || 0;
      const bYear = parseInt(b.data.startYear) || 0;
      return aYear - bYear;
    });
};

const getProfessors = () => entries.filter((entry) => entry.id.startsWith(`professors/`));

const professors = getProfessors();

const groups = [
  {
    title: "PhD Students",
    folder: "phd",
  },
  {
    title: "Masters Students",
    folder: "masters",
  },
  {
    title: "Undergraduates",
    folder: "undergraduates",
  },
];

const groupData = groups.map(({ folder }) => ({
  students: groupAndSortByStartYear(folder, false), // current students
  alumni: groupAndSortByStartYear(folder, true),    // alumni (have endYear)
}));
---

<BaseLayout title={peopleIndex.data.title} description={peopleIndex.data.description}>
  <section class="section-sm pb-0">
    <div class="container">

      <h2
        class="text-2xl
        text-center md:text-left
        font-semibold mb-8 ml-[1rem] mr-[1em]
        md:ml-[6rem] md:mr-[6rem]
        border-b border-border 
        dark:border-darkmode-border">
        Professors
      </h2>
      <div class="row justify-center">
        {professors.map((entry) => <ProfessorCard entry={entry} />)}
      </div>

      {groups.map(({ title }, i) => (
        <>
          <h2
            class="text-2xl
            text-center md:text-left
            font-semibold mb-8 ml-[1rem] mr-[1rem] 
            md:ml-[6rem] md:mr-[6rem]
            border-b border-border dark:border-darkmode-border">
            {title}
          </h2>
          <div class="row justify-center md:ml-[6rem] md:mr-[6rem]">
            {groupData[i].students.map((entry) => <StudentCard entry={entry} />)}
          </div>

          {groupData[i].alumni.length > 0 && (
            <>
              <h2
                class="text-xl
                text-center md:text-left
                font-semibold mt-10 mb-8 ml-[3rem] mr-[3rem]
                md:ml-[8rem] md:mr-[8rem]
                border-b border-border dark:border-darkmode-border">
                Alumni
              </h2>
              <div class="row justify-center md:ml-[6rem] md:mr-[6rem]">
                {groupData[i].alumni.map((entry) => <StudentCard entry={entry} />)}
              </div>
            </>
          )}
        </>
      ))}

    </div>
  </section>
</BaseLayout>
