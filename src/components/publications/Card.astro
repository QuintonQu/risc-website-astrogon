---
import type { PubEntry } from "@/types";
import { plainify } from "@lib/textConverter";
import { formatDate } from "@lib/formatDate";
import { Image } from "astro:assets";

interface Props {
  entry: PubEntry;
}

const { entry }: Props = Astro.props;
const {
  title,
  authors,
  projectPage,
  projectCode,
  projectPdf,
  image,
  imageAlt
} = entry.data;

const entryDate = entry.data.date ? formatDate(entry.data.date) : null;
const publicationVenue = entry.body ? plainify(entry.body) : null;
---

<article class="grid grid-cols-1 sm:grid-cols-[auto_1fr] gap-4 items-start">
  {image && (
    <Image
      src={image}
      alt={imageAlt}
      class="w-32 h-auto object-cover rounded-lg shadow-md"
      loading="lazy"
    />
  )}

  <div class="flex flex-col gap-2">
    <h4 class="text-lg font-bold">{title}</h4>

    {publicationVenue && (
      <p class="text-sm text-gray-500">{publicationVenue}</p>
    )}

    {authors && (
      <p class="text-sm text-gray-700">
        {authors.map((author, index) => {
          const name =
            typeof author.name === "string"
              ? author.name
              : "Unknown";
          const annotation = author.annotation ? ` (${author.annotation})` : "";
          return (
            <>
              {name}{annotation}
              {index < authors.length - 1 && ", "}
            </>
          );
        })}
      </p>
    )}

    <div class="flex gap-4 text-sm text-blue-600 underline">
      {projectPage && (
        <a href={projectPage} target="_blank" rel="noopener noreferrer">Project Page</a>
      )}
      {projectCode && (
        <a href={projectCode} target="_blank" rel="noopener noreferrer">Code</a>
      )}
      {projectPdf && (
        <a href={projectPdf} target="_blank" rel="noopener noreferrer">PDF</a>
      )}
    </div>
  </div>
</article>